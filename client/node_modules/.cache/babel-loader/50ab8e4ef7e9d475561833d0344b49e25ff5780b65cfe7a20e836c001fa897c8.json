{"ast":null,"code":"var _jsxFileName = \"D:\\\\two\\\\Wincrics\\\\client\\\\src\\\\pages\\\\adminpages\\\\Analytics.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { TextField, Box, Divider } from '@mui/material';\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { format } from 'date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Analytics = () => {\n  _s();\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n  useEffect(() => {\n    fetchData(selectedDate);\n  }, [selectedDate]);\n  const fetchData = async date => {\n    setLoading(true);\n    try {\n      const formattedDate = format(date, 'MM/dd/yyyy');\n      const response = await fetch(`http://localhost:3000/analytics?page=1&filters[date]=${formattedDate}`);\n      const result = await response.json();\n      const filteredData = result.map((item, index) => ({\n        id: index + 1,\n        url: item.url,\n        path: item.path,\n        time: item.time,\n        date: item.date,\n        ip: item.ip\n      }));\n      setData(filteredData);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const columns = [{\n    field: 'url',\n    headerName: 'URL',\n    width: 300\n  }, {\n    field: 'path',\n    headerName: 'Path',\n    width: 100\n  }, {\n    field: 'time',\n    headerName: 'Time',\n    width: 150\n  }, {\n    field: 'date',\n    headerName: 'Date',\n    width: 100\n  }, {\n    field: 'ip',\n    headerName: 'IP Address',\n    width: 150\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      height: '90%',\n      padding: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'flex-end',\n        alignItems: 'center',\n        mb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: AdapterDateFns,\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          label: \"Select Date\",\n          value: selectedDate,\n          onChange: newDate => setSelectedDate(newDate),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            ...params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 38\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {\n      sx: {\n        mb: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: 500,\n        width: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(DataGrid, {\n        rows: data,\n        columns: columns,\n        pageSize: 1,\n        loading: loading,\n        checkboxSelection: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(Analytics, \"DowAXOjzpqeQW7jlgLmDofuCK6E=\");\n_c = Analytics;\nexport default Analytics;\nvar _c;\n$RefreshReg$(_c, \"Analytics\");","map":{"version":3,"names":["React","useState","useEffect","DataGrid","TextField","Box","Divider","LocalizationProvider","DatePicker","AdapterDateFns","format","jsxDEV","_jsxDEV","Analytics","_s","data","setData","loading","setLoading","selectedDate","setSelectedDate","Date","fetchData","date","formattedDate","response","fetch","result","json","filteredData","map","item","index","id","url","path","time","ip","error","console","columns","field","headerName","width","sx","height","padding","children","display","justifyContent","alignItems","mb","dateAdapter","label","value","onChange","newDate","renderInput","params","fileName","_jsxFileName","lineNumber","columnNumber","rows","pageSize","checkboxSelection","_c","$RefreshReg$"],"sources":["D:/two/Wincrics/client/src/pages/adminpages/Analytics.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { DataGrid } from '@mui/x-data-grid';\r\nimport { TextField, Box, Divider } from '@mui/material';\r\nimport { LocalizationProvider, DatePicker } from '@mui/x-date-pickers';\r\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\r\nimport { format } from 'date-fns';\r\n\r\nconst Analytics = () => {\r\n  const [data, setData] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [selectedDate, setSelectedDate] = useState(new Date());\r\n\r\n  useEffect(() => {\r\n    fetchData(selectedDate);\r\n  }, [selectedDate]);\r\n\r\n  const fetchData = async (date) => {\r\n    setLoading(true);\r\n    try {\r\n      const formattedDate = format(date, 'MM/dd/yyyy');\r\n      const response = await fetch(`http://localhost:3000/analytics?page=1&filters[date]=${formattedDate}`);\r\n      const result = await response.json();\r\n      const filteredData = result.map((item, index) => ({\r\n        id: index + 1,  \r\n        url: item.url,\r\n        path: item.path,\r\n        time: item.time,\r\n        date: item.date,\r\n        ip: item.ip,\r\n      }));\r\n      setData(filteredData);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    { field: 'url', headerName: 'URL', width: 300 },\r\n    { field: 'path', headerName: 'Path', width: 100 },\r\n    { field: 'time', headerName: 'Time', width: 150 },\r\n    { field: 'date', headerName: 'Date', width: 100 },\r\n    { field: 'ip', headerName: 'IP Address', width: 150 },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ height: '90%', padding: 2}}>\r\n      <Box sx={{ display: 'flex', justifyContent: 'flex-end', alignItems: 'center', mb: 2 }}>\r\n        <LocalizationProvider dateAdapter={AdapterDateFns}>\r\n          <DatePicker\r\n            label=\"Select Date\"\r\n            value={selectedDate}\r\n            onChange={(newDate) => setSelectedDate(newDate)}\r\n            renderInput={(params) => <TextField {...params} />}\r\n          />\r\n        </LocalizationProvider>\r\n      </Box>\r\n      <Divider sx={{ mb: 2 }} />\r\n      <Box sx={{ height: 500, width: '100%' }}>\r\n        <DataGrid\r\n          rows={data}\r\n          columns={columns}\r\n          pageSize={1}\r\n          loading={loading}\r\n          checkboxSelection\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default Analytics;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,SAAS,EAAEC,GAAG,EAAEC,OAAO,QAAQ,eAAe;AACvD,SAASC,oBAAoB,EAAEC,UAAU,QAAQ,qBAAqB;AACtE,SAASC,cAAc,QAAQ,oCAAoC;AACnE,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,IAAIoB,IAAI,CAAC,CAAC,CAAC;EAE5DnB,SAAS,CAAC,MAAM;IACdoB,SAAS,CAACH,YAAY,CAAC;EACzB,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,MAAMG,SAAS,GAAG,MAAOC,IAAI,IAAK;IAChCL,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMM,aAAa,GAAGd,MAAM,CAACa,IAAI,EAAE,YAAY,CAAC;MAChD,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAAE,wDAAuDF,aAAc,EAAC,CAAC;MACrG,MAAMG,MAAM,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MACpC,MAAMC,YAAY,GAAGF,MAAM,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,MAAM;QAChDC,EAAE,EAAED,KAAK,GAAG,CAAC;QACbE,GAAG,EAAEH,IAAI,CAACG,GAAG;QACbC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfC,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfb,IAAI,EAAEQ,IAAI,CAACR,IAAI;QACfc,EAAE,EAAEN,IAAI,CAACM;MACX,CAAC,CAAC,CAAC;MACHrB,OAAO,CAACa,YAAY,CAAC;IACvB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRpB,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMsB,OAAO,GAAG,CACd;IAAEC,KAAK,EAAE,KAAK;IAAEC,UAAU,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAI,CAAC,EAC/C;IAAEF,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,EACjD;IAAEF,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,EACjD;IAAEF,KAAK,EAAE,MAAM;IAAEC,UAAU,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAI,CAAC,EACjD;IAAEF,KAAK,EAAE,IAAI;IAAEC,UAAU,EAAE,YAAY;IAAEC,KAAK,EAAE;EAAI,CAAC,CACtD;EAED,oBACE/B,OAAA,CAACP,GAAG;IAACuC,EAAE,EAAE;MAAEC,MAAM,EAAE,KAAK;MAAEC,OAAO,EAAE;IAAC,CAAE;IAAAC,QAAA,gBACpCnC,OAAA,CAACP,GAAG;MAACuC,EAAE,EAAE;QAAEI,OAAO,EAAE,MAAM;QAAEC,cAAc,EAAE,UAAU;QAAEC,UAAU,EAAE,QAAQ;QAAEC,EAAE,EAAE;MAAE,CAAE;MAAAJ,QAAA,eACpFnC,OAAA,CAACL,oBAAoB;QAAC6C,WAAW,EAAE3C,cAAe;QAAAsC,QAAA,eAChDnC,OAAA,CAACJ,UAAU;UACT6C,KAAK,EAAC,aAAa;UACnBC,KAAK,EAAEnC,YAAa;UACpBoC,QAAQ,EAAGC,OAAO,IAAKpC,eAAe,CAACoC,OAAO,CAAE;UAChDC,WAAW,EAAGC,MAAM,iBAAK9C,OAAA,CAACR,SAAS;YAAA,GAAKsD;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACkB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,eACNlD,OAAA,CAACN,OAAO;MAACsC,EAAE,EAAE;QAAEO,EAAE,EAAE;MAAE;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1BlD,OAAA,CAACP,GAAG;MAACuC,EAAE,EAAE;QAAEC,MAAM,EAAE,GAAG;QAAEF,KAAK,EAAE;MAAO,CAAE;MAAAI,QAAA,eACtCnC,OAAA,CAACT,QAAQ;QACP4D,IAAI,EAAEhD,IAAK;QACXyB,OAAO,EAAEA,OAAQ;QACjBwB,QAAQ,EAAE,CAAE;QACZ/C,OAAO,EAAEA,OAAQ;QACjBgD,iBAAiB;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChD,EAAA,CA/DID,SAAS;AAAAqD,EAAA,GAATrD,SAAS;AAiEf,eAAeA,SAAS;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}